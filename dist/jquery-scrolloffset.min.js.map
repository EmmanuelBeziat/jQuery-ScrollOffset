{"version":3,"sources":["jquery.scrolloffset.js"],"names":["$","window","document","undefined","Plugin","element","options","this","_name","pluginName","_defaults","fn","defaults","extend","init","prototype","buildCache","bindEvents","destroy","unbindEvents","$element","removeData","$body","plugin","on","event","animate","call","callback","off","$target","target","attr","scrollTop","offset","top","duration","preventDefault","onComplete","each","data","jQuery"],"mappings":";;;;;;CAOC,SAAUA,EAAGC,EAAQC,EAAUC,GAC/B,YAOA,SAASC,GAAOC,EAASC,GACxBC,KAAKF,QAAUA,EACfE,KAAKC,MAAQC,EACbF,KAAKG,UAAYV,EAAEW,GAAGF,GAAYG,SAClCL,KAAKD,QAAUN,EAAEa,UAAYN,KAAKG,UAAWJ,GAE7CC,KAAKO,OAXN,GAAIL,GAAa,cAiBjBT,GAAEa,OAAOT,EAAOW,WAGfD,KAAM,WACLP,KAAKS,aACLT,KAAKU,cAONC,QAAS,WACRX,KAAKY,eACLZ,KAAKa,SAASC,cAOfL,WAAY,WACXT,KAAKa,SAAWpB,EAAEO,KAAKF,SACvBE,KAAKe,MAAQtB,EAAE,eAMhBiB,WAAY,WACX,GAAIM,GAAShB,IAEbgB,GAAOH,SAASI,GAAG,SAAgBD,EAAOf,MAAO,SAASiB,GACzDF,EAAOG,QAAQC,KAAKJ,EAAQE,KAM7BlB,KAAKqB,YAMNT,aAAc,WACbZ,KAAKa,SAASS,IAAI,IAAMtB,KAAKC,QAM9BkB,QAAS,SAASD,GACjB,GAAIK,GAAU9B,EAAEA,EAAEyB,EAAMM,QAAQC,KAAK,QAErCzB,MAAKe,MAAMI,SACVO,UAAYH,EAAQI,SAASC,IAAM5B,KAAKD,QAAQ4B,QAC9C3B,KAAKD,QAAQ8B,UAEhBX,EAAMY,kBAMPT,SAAU,WAET,GAAIU,GAAa/B,KAAKD,QAAQgC,UAEJ,mBAAfA,IACVA,EAAWX,KAAKpB,KAAKF,YASxBL,EAAEW,GAAGF,GAAc,SAASH,GAM3B,MALAC,MAAKgC,KAAK,WACJvC,EAAEwC,KAAMjC,KAAM,UAAYE,IAC9BT,EAAEwC,KAAMjC,KAAM,UAAYE,EAAY,GAAIL,GAAQG,KAAMD,MAGnDC,MAMRP,EAAEW,GAAGF,GAAYG,UAChBsB,OAAQ,EACRE,SAAU,IACVE,WAAY,OAGVG,OAAQxC,OAAQC","file":"jquery-scrolloffset.min.js","sourcesContent":["/*!\r\n * Animate anchors to make them smooth, and allows offset\r\n * Version : 2.1.1\r\n * Emmanuel B. (www.emmanuelbeziat.com)\r\n * https://github.com/EmmanuelBeziat/jQuery-ScrollOffset\r\n **/\r\n\r\n;(function($, window, document, undefined) {\r\n\t'use strict';\r\n\r\n\tvar pluginName = 'scrollOffset';\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\t\tthis._name = pluginName;\r\n\t\tthis._defaults = $.fn[pluginName].defaults;\r\n\t\tthis.options = $.extend( {}, this._defaults, options );\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\t/**\r\n\t * Methods\r\n\t */\r\n\t$.extend(Plugin.prototype, {\r\n\r\n\t\t// Initialization logic\r\n\t\tinit: function() {\r\n\t\t\tthis.buildCache();\r\n\t\t\tthis.bindEvents();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove plugin instance\r\n\t\t * Example: $('selector').data('tabs').destroy();\r\n\t\t */\r\n\t\tdestroy: function() {\r\n\t\t\tthis.unbindEvents();\r\n\t\t\tthis.$element.removeData();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Create variables that can be accessed by other functions\r\n\t\t * Useful for DOM performances\r\n\t\t */\r\n\t\tbuildCache: function() {\r\n\t\t\tthis.$element = $(this.element);\r\n\t\t\tthis.$body = $('html, body');\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Attach actions to events\r\n\t\t */\r\n\t\tbindEvents: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\tplugin.$element.on('click' + '.' + plugin._name, function(event) {\r\n\t\t\t\tplugin.animate.call(plugin, event);\r\n\t\t\t});\r\n\r\n\t\t\t/**\r\n\t\t\t * Allow callback on complete loading\r\n\t\t\t */\r\n\t\t\tthis.callback();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove actions from events\r\n\t\t */\r\n\t\tunbindEvents: function() {\r\n\t\t\tthis.$element.off('.' + this._name);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * When anchors are used, lock up the scroll\r\n\t\t */\r\n\t\tanimate: function(event) {\r\n\t\t\tvar $target = $($(event.target).attr('href'));\r\n\r\n\t\t\tthis.$body.animate({\r\n\t\t\t\tscrollTop: ($target.offset().top - this.options.offset)\r\n\t\t\t}, this.options.duration);\r\n\r\n\t\t\tevent.preventDefault();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * When loading tab is complete\r\n\t\t */\r\n\t\tcallback: function() {\r\n\t\t\t// Cache onComplete option\r\n\t\t\tvar onComplete = this.options.onComplete;\r\n\r\n\t\t\tif (typeof onComplete === 'function') {\r\n\t\t\t\tonComplete.call(this.element);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\t/**\r\n\t * jQuery plugin wrapper\r\n\t */\r\n\t$.fn[pluginName] = function(options) {\r\n\t\tthis.each(function() {\r\n\t\t\tif (!$.data( this, \"plugin_\" + pluginName)) {\r\n\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * Plugin options and their default values\r\n\t */\r\n\t$.fn[pluginName].defaults = {\r\n\t\toffset: 0,\r\n\t\tduration: 400,\r\n\t\tonComplete: null\r\n\t};\r\n\r\n})( jQuery, window, document );"],"sourceRoot":"/source/"}